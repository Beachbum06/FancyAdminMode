<?php

/**
 * ProcessWire Fancy Admin Mode
 *
 * 15/12/2012 by Philipp "Soma" Urlich
 *
 * ProcessWire 2.x
 * Copyright (C) 2010 by Ryan Cramer
 * Licensed under GNU/GPL v2, see LICENSE.TXT
 *
 * http://www.processwire.com
 * http://www.ryancramer.com
 *
 */

class FancyAdminMode extends WireData implements Module {

    /**
     * getModuleInfo is a module required by all modules to tell ProcessWire about them
     *
     * @return array
     *
     */
    public static function getModuleInfo() {

        return array(
            'title' => 'Fancy Admin Mode',
            'version' => 1,
            'summary' => 'Have fun with Fancybox in PW admin. All, except "Pages" will open in Fancybox Iframe mode.',
            'href' => '',
            'autoload' => true
            );
    }


    public function init() {
        $this->addHookBefore("ProcessPageView::execute", $this, "addModal");
        $this->addHookAfter("Process::execute", $this, "addScripts");
    }

    public function addModal($event){
        if(!isset($_GET['modal'])
                && ("/" . $_GET['it'] != $this->config->urls->admin . "page/")
                && (strpos($_GET['it'], ltrim($this->config->urls->admin,"/") . "page/search/") === false )
                && (strpos($_GET['it'], ltrim($this->config->urls->admin,"/") . "page/list/") === false )
                && (strpos($_GET['it'], ltrim($this->config->urls->admin,"/") . "profile/") === false )){
            $_GET['modal'] = 1;
        }
    }
    public function addScripts($event) {
        $this->modules->get("JqueryFancybox");
        $this->config->scripts->append($this->config->urls->FancyAdminMode . "FancyAdminMode.js");

    }


}
